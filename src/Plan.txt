Symulacja dylematu więźnia

klasy:

- Player - klasa parent zawierająca cechy gracza i jego taktykę
- ResponsePair - struktura danych odzwierciedlająca odpowiedzi w rundzie

  WAVE   - creates games between all players, sums up the total points and determines which players should be eliminated
    |      based on total points accumulated in all the games of the wave.
    |      (scope: ALL PLAYERS)
    |
    V
  GAME   - consists of number of matches between two players. Ends with totalPoints scored and number of matches won.
    |      (scope: TWO PLAYERS)
    |
    V
  MATCH  - series of encounters that accumulates points from the rounds.
    |      The winner's total score from the round is increased by 20%.
    |      (scope: TWO PLAYERS)
    |
    V
  ROUND  - one encounter where player cooperate or defect
            (scope: TWO PLAYERS)


        TODO: increase winners totalPoint from the match by 20%
        TODO: Pretty print wyników fali
        TODO: Eliminacja przegranego gracza
        TODO: playOutWave outputs new player List that will go into another Wave
        TODO: Parametryzacja fali z ustawieniami dla liczby rund, meczy, bonusu dla wygranego i ilości eliminowanych graczy


Tabele:

    - gamerecord : szczegóły gry, łaczna suma wszystkich punktów


    - matchrecord : szczegóły meczu, lewy, prawy gracz IDs, ostateczne punkty, zwycięzca

    CREATE TABLE matchrecord (
        gameId INT NOT NULL,
        matchId INT NOT NULL,
        leftPlayerId INT NOT NULL,
        rightPlayerId INT NOT NULL,
        leftPlayerFinalScore INT NOT NULL,
        rightPlayerFinalScore INT NOT NULL,
        winnerId INT NOT NULL,
        PRIMARY KEY (gameId, matchId)
    );

    - roundrecord : przebieg wszystkich rund, odpowiedzi graczy, wynik (Do usunięcia players IDs, Do DODANIA current score lewego i prawego gracza)

    CREATE TABLE roundrecord (
            gameId INT NOT NULL,
            matchId INT NOT NULL,
            roundId INT NOT NULL,
            leftPlayerResponse BOOLEAN NOT NULL,
            rightPlayerResponse BOOLEAN NOT NULL,
            outcome VARCHAR(255) NOT NULL,
            leftPlayerCurrentPoints INT NOT NULL,
            rightPlayerCurrentPoints INT NOT NULL,
            PRIMARY KEY (gameId, matchId, roundId)
        );

